language: go

branches:
    only:
        - travis-packages

git:
  depth: false

sudo: required

dist: bionic

services:
  - docker

go:
  - 1.13

before_install:
  - |
      if ! git diff --name-only $TRAVIS_COMMIT_RANGE | grep -qvE '(\.md)|(\.png)|(\.pdf)|(\.html)|^(LICENSE)|^(docs)'
      then
        echo "Only doc files were updated, skip running the CI."
        travis_terminate 0
      fi

install: true

jobs:
  include:
    - stage: "Test on amd64"
      name: "build, smallbuild, crossbuild"
      arch: amd64
      before_script:
        - sudo apt-get install upx-ucl -y
        - sudo apt-get install gcc-aarch64-linux-gnu -y
        - sudo apt-get install libc6-dev-arm64-cross -y
        - sudo apt-get install gcc-arm-linux-gnueabi -y
        - sudo apt-get install libc6-dev-armel-cross -y
        - sudo apt-get install ruby ruby-dev rubygems build-essential
        - sudo gem install --no-document fpm
        - export GOFLAGS=-mod=vendor
      script:
        - echo $PWD
        - mkdir -p $HOME/cloudcore/cloudcore_folder
        - mkdir -p $HOME/edgecore/edgecore_folder
        - cp $GOPATH/src/github.com/bitvijays/kubeedge/build/tools/certgen.sh $HOME/cloudcore/cloudcore_folder/
        - cp $GOPATH/src/github.com/bitvijays/kubeedge/build/crds/devices/* $HOME/cloudcore/cloudcore_folder/.
        - cp $GOPATH/src/github.com/bitvijays/kubeedge/build/crds/reliablesyncs/* $HOME/cloudcore/cloudcore_folder/.
        - echo "/etc/kubeedge/files/certgen.sh genCertAndKey edge" >> $HOME/cloudcore/cloudcore_folder/post_install.sh
        - echo "kubectl create -f devices_v1alpha1_devicemodel.yaml" >> $HOME/cloudcore/cloudcore_folder/post_install.sh
        - echo "kubectl create -f devices_v1alpha1_device.yaml" >> $HOME/cloudcore/cloudcore_folder/post_install.sh
        - echo "kubectl create -f cluster_objectsync_v1alpha1.yaml" >> $HOME/cloudcore/cloudcore_folder/post_install.sh
        - echo "kubectl create -f objectsync_v1alpha1.yaml" >> $HOME/cloudcore/cloudcore_folder/post_install.sh
        - echo "mkdir -p  /etc/kubeedge/config/" >> $HOME/cloudcore/cloudcore_folder/post_install.sh
        - echo "/opt/kubeedge/cloudcore/cloudcore --minconfig > /etc/kubeedge/config/cloudcore.yaml" >> $HOME/cloudcore/cloudcore_folder/post_install.sh
        - echo "mkdir -p  /etc/kubeedge/config/" >> $HOME/edgecore/edgecore_folder/post_install.sh
        - echo "/opt/kubeedge/edgecore/edgecore --minconfig > /etc/kubeedge/config/edgecore.yaml" >> $HOME/edgecore/edgecore_folder/post_install.sh
        - make
        - cp $GOPATH/src/github.com/bitvijays/kubeedge/_output/local/bin/cloudcore $HOME/cloudcore/cloudcore
        - cp $GOPATH/src/github.com/bitvijays/kubeedge/_output/local/bin/edgecore $HOME/edgecore/edgecore
        - fpm -s dir -t deb -v 1.2 -n cloudcore --after-install=$HOME/cloudcore/cloudcore_folder/post_install.sh $HOME/cloudcore/cloudcore_folder/=/etc/kubeedge/files $HOME/cloudcore/cloudcore=/opt/kubeedge/cloudcore/cloudcore
        - fpm -s dir -t deb -v 1.2 -n edgecore --after-install=$HOME/edgecore/edgecore_folder/post_install.sh $HOME/edgecore/edgecore_folder/=/etc/kubeedge/files $HOME/edgecore/edgecore=/opt/kubeedge/edgecore/edgecore
        - make smallbuild 
        - make crossbuild
        - cp $GOPATH/src/github.com/bitvijays/kubeedge/_output/local/bin/edgecore $HOME/edgecore/edgecore
        - fpm -s dir -t deb -v 1.2 -n edgecore -a aarch64 --after-install=$HOME/edgecore/edgecore_folder/post_install.sh $HOME/edgecore/edgecore_folder/=/etc/kubeedge/files $HOME/edgecore/edgecore=/opt/kubeedge/edgecore/edgecore
        - make crossbuild GOARM=GOARM7
        - cp $GOPATH/src/github.com/bitvijays/kubeedge/_output/local/bin/edgecore $HOME/edgecore/edgecore
        - fpm -s dir -t deb -v 1.2 -n edgecore -a armv7l --after-install=$HOME/edgecore/edgecore_folder/post_install.sh $HOME/edgecore/edgecore_folder/=/etc/kubeedge/files $HOME/edgecore/edgecore=/opt/kubeedge/edgecore/edgecore
        - pwd
        - ls

      deploy:
        provider: releases
        api_key:
          secure: "SI1K1fBjfP6I2KbLdadt2WwAqwAuBneJ9+MMfaiWoknO52fkegfRmtw6TE2ESxobFBaFxRAAxopv1vfdWI5MODhgycAuZwzjNZoONUtIOA6oc/44O/VqE+9FdKNg2Q4U9qeiWz3TUn2/MZ+shD0WsqnvtLLOgjKuP22UGzd6qVTpeJBsViGhJ0K1YhBCRdnWz5MHTSp+TcCJocp73meNwsz08BfDMxA+iRnBE0WVwXI+dtmWd9ot2kKXvrvQgNWzf94sNAQ3gjYQid1u7LRf8FVJvRD442TaJvN18k/oYKPWPcsgcYJgcp/bEEivMpnKI4L49BhvbGExXn96MPmql+o4vxBJadAIMW19OZyKfi9pDfO8L7oQ1wfgmMMdQWryEYwOkkgKKYc8Wrvtr6jTgTYKfhve7oghnTnJolzhKYKA3hon+8wSnLDdOcklfBvSq7D//LyYZQtTxZn5KGIQXgoRvHwiWpRj8tvHLHxuXOQAgn8pUOm7Lj9RYWzMn+Vjk4CS+enyCJXcUfzATd6w+RoiTmNAG/rZJkkJJJfFBQTynfm/n/5O9sVHan/Ccy4UB2NZcWBPfISuSwgxxwF0MyUDUHstftr8NRt+eMHfbn8MPlHv79Bpo8PI53XTMUoNa63cR3IUfThdhcY00RckVcRxAVARbA9jlHZD+bCs5+w=
        file:
          - "cloudcore_1.2_amd64.deb"
          - "edgecore_1.2_amd64.deb"
        skip_cleanup: true
        on:
           branch: travis-packages
